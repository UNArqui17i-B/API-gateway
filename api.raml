#%RAML 1.0
title: API Gateway
baseUri: http://localhost:5000
mediaType: application/json

# Auth
securitySchemes:
    JWT:
        description: Token based authentication
        type: x-jwt
        describedBy:
            headers:
                Authorization:
                    description: Send the token
                    example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ


# Possible types
types:
    User:
        type: object
        properties:
            name: string
            email: string
            password: string

    Login:
        type: object
        properties:
            email: string
            password: string

# Routes
/api:
    description: API Gateway for consumming microservices

    # User related
    /users:
        post:
            description: Create a user
            body:
                type: User

        /{id}:
            get:
                description: Search a user

            /{rev}:
                put:
                    description: Update a user
                    securedBy: JWT
                    body:
                        type: User

                delete:
                    description: Delete a user
                    securedBy: JWT

        /login/{id}:
            post:
                description: Check valid user
                body:
                    type: Login

        /email/{id}:
            put:
                description: Verifies user by email

    # File related
    /files:
        /info/{id}:
            get:
                description: Get metadata from file
                securedBy: JWT

        /sharedWith:
            get:
                description: Files shared with an user's email
                securedBy: JWT
                queryParameters:
                    email:
                        type: string

        /ownedBy/{idUser}:
            get:
                description: Files owned by the user
                securedBy: JWT

        /download/{id}:
            get:
                description: Downloads the file
                securedBy: JWT

        /delete/{id}:
            delete:
                description: Delete the file
                securedBy: JWT

        /update/{id}:
            put:
                description: Update the file's metadata
                securedBy: JWT

        /upload:
            post:
                description: Creates an uploads the file
                securedBy: JWT